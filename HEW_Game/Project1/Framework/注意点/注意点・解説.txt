---------------------------------------------------------------------
-----		フレームワークを運用する上での注意点・プログラムの解説		-----
---------------------------------------------------------------------
＜HRESULT型について＞
　〇基本的に戻り値に"HRESULT型"を使っている関数は"動作"だけを行っていて、HRESULTはその結果を保持している

＜WICTextureLoaderについて＞
　〇WICTextureLoaderはプロジェクトに埋め込む方式を使ってます（2024/9/30時点）
　　→後から変更あるかも
　　　→Cドライブ直下にWICTextureLoaderとDirectXToolKitをそれぞれ入れてもらう形にします！（2024/12/8時点）

＜コンポーネント(機能)について＞
・基本的にUnityと同じような作りにしたつもりです。
/// 解説 ///
　〇TransFormComponent
　　→基本的に全てのゲームオブジェクトがもつコンポーネントです
　　・座標(Position)、角度(Rotation)、大きさ(Scale)を持ってます

＜プリコンパイル済みヘッダーについて＞
〇プリコンパイル済みヘッダーとは(pch.h, pch.cpp)
→プロジェクトのビルド速度を向上させるために使われる仕組みです。
　よく使うヘッダーファイルが何度もコンパイルされるのを防ぐために１つのヘッダーファイルに一度だけインクルードしておくと毎回ヘッダーファイルを読み込まなくてよくなります

＜命名規則について＞
〇人によって名前の付け方が違って混乱が起こるのを防ぐために、基本的な命名規則を作ってます
　・一時的に使う変数以外は基本的に１文字目は大文字（※クラスの変数を作る場合は例外 → Player player; とか）
　・メンバ変数の場合は "m_" を
　・グローバル変数の場合は "g_" を
　・ポインタの場合は "p" を
　・引数の場合は"_"を
それぞれ変数名の頭につけるようにしましょう！
　（例１）メンバ変数に"Hp"がある場合
		→m_Hp;

　（例２）メンバ変数にポインタ変数"Address"がある場合
		→m_pAddress;

　（例３）引数にnumberがある場合
		→_Number